name: Building Package using Conda

on:
  workflow_call:
    secrets:
      token:
        description: 'Anaconda access Token (required)'
        required: true      

env:
  BUILD_CMD_PREFIX: "conda build . --no-test --python="


jobs:
  build-unix:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macos-latest, ubuntu-latest]
        env:
          - CONDA_PY: "3.8" 
          - CONDA_PY: "3.9" 
          - CONDA_PY: "3.10" 

    environment: anaconda_build

    steps:
    - name: Checkout sources
      uses: actions/checkout@v3

    - name: Setup Miniconda
      uses: conda-incubator/setup-miniconda@v2.2.0
      with:
          miniconda-version: "latest"
          auto-update-conda: true
          channels: conda-forge, fredboudon
          auto-activate-base: true
          activate-environment: ""
          conda-build-version: "*"
          mamba-version: "*"

    - name: Setup anaconda-client
      shell: bash -l {0}
      run: |
        echo "Install anaconda-client"
        conda info
        mamba install -y -q anaconda-client
        anaconda --version

    - name: Build 
      id: build
      shell: bash -l {0}
      env:
          CONDA_PY: ${{ matrix.env.CONDA_PY }}
          BUILD_CMD: "${{ env.BUILD_CMD_PREFIX }}${{ matrix.env.CONDA_PY }}"
      run: |
        # Build
        if [[ "$CONDA_PY" = "" ]]; then
          echo "CONDA_PY is not defined"
          exit -1
        fi

        $BUILD_CMD


    - name: Deploy
      shell: bash -l {0}
      env:
          BUILD_OUTPUT_CMD: "${{ env.BUILD_CMD_PREFIX }}${{ matrix.env.CONDA_PY }} --output"
      run: |

        export PACKAGE_NAME=`$BUILD_OUTPUT_CMD`

        if [[ "$PACKAGE_NAME" = "" ]]; then
          echo "PACKAGE_NAME is not defined"
          exit -1
        fi
        export ANACONDA_API_TOKEN=${{ secrets.token }}
        anaconda upload --skip-existing $PACKAGE_NAME --no-progress

  build-win:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-2019]
        env:
          - CONDA_PY: "3.8" 
          - CONDA_PY: "3.9" 
          - CONDA_PY: "3.10" 

    environment: anaconda_build

    steps:
    - name: Checkout sources
      uses: actions/checkout@v3

    - name: Setup Miniconda
      uses: conda-incubator/setup-miniconda@v2.2.0
      with:
          miniconda-version: "latest"
          auto-update-conda: true
          channels: conda-forge, fredboudon
          auto-activate-base: true
          activate-environment: ""
          conda-build-version: "*"
          mamba-version: "*"

    - name: Setup anaconda-client
      shell: cmd /C CALL {0} 
      run: |
        ECHO "Install anaconda-client"
        call conda activate base
        mamba install -y -q anaconda-client

    - name: Setup Visual Studio
      uses: ilammy/msvc-dev-cmd@v1
      with:
          vsversion: "2019"

    - name: Build
      id: build
      env:
          CONDA_PY: ${{ matrix.env.CONDA_PY }}
          BUILD_CMD: "${{ env.BUILD_CMD_PREFIX }}${{ matrix.env.CONDA_PY }}"
      shell: cmd /C CALL {0} 
      run: |
        ECHO Conda build with CMD and Python %CONDA_PY%
        call conda activate base

        ECHO BUILD
        ECHO BUILD_CMD="%BUILD_CMD%"
        %BUILD_CMD%

    - name: Deploy
      env:
          BUILD_OUTPUT_CMD: "${{ env.BUILD_CMD_PREFIX }}${{ matrix.env.CONDA_PY }} --output"
      shell: cmd /C CALL {0}
      run: |

        call conda activate base
        ECHO Retrieve output

        FOR /f  %%i IN ('call %BUILD_OUTPUT_CMD%') DO (
          SET PACKAGE_NAME=%%i
        )

        IF  not defined PACKAGE_NAME (
          ECHO "PACKAGE_NAME is not defined"
          EXIT 1
        )
        ECHO PACKAGE_NAME="%PACKAGE_NAME%"

        ECHO DEPLOY
        SET ANACONDA_API_TOKEN=${{ secrets.token }}
        anaconda upload --skip-existing %PACKAGE_NAME% --no-progress

